variables:
  # https://hub.docker.com/r/alpine/git/tags
  GIT_VERSION: v2.30.1
  BUILD_DISABLED: "yes"

include:
  project: nunet/nunet-infra
  file: ci/templates/Auto-DevOps.gitlab-ci.yml
  ref: 29e2a1ea1178483a83f8bbae186c461fa2248164

image: registry.gitlab.com/nunet/device-management-service/nunet-dms-builder:0.3

Build:
  stage: build
  script:
    - echo "Building debian archives..."
    - bash maint-scripts/build.sh
  only:
    refs:
      - $CI_DEFAULT_BRANCH
      - main
      - staging
      - develop
  artifacts:
    untracked: false
    when: on_success
    expire_in: "30 days"
    paths:
      - dist/

Deploy DMS:
  stage: deploy
  variables:
    CI_PARENT_PROJECT: dms
  trigger:
    forward:
      yaml_variables: true
      pipeline_variables: true
    project: nunet/nunet-infra
    branch: develop
  only:
    refs:
      - $CI_DEFAULT_BRANCH

.git:push:
  after_script:
    - cd "${CI_COMMIT_SHA}"

    - git checkout -B ${CI_COMMIT_BRANCH}

    - git add .

    - |-
      CHANGES=$(git status --porcelain | wc -l)

      if [ "$CHANGES" -gt "0" ]; then
        git status

        git commit -m "${COMMIT_MESSAGE}"

        git push -f origin "${CI_COMMIT_BRANCH}"

      fi

  before_script:
    - git clone "https://${GITLAB_USERNAME}:${GITLAB_TOKEN}@${CI_SERVER_HOST}/nunet/open-api/device-management-api-spec" "${CI_COMMIT_SHA}"

    - git config --global user.email "${GIT_USER_EMAIL:-$GITLAB_USER_EMAIL}"
    - git config --global user.name "${GIT_USER_NAME:-$GITLAB_USER_NAME}"

  image:
    entrypoint: ['']
    name: alpine/git:${GIT_VERSION}

deploy:openapi:
  extends: .git:push
  stage: .pre
  script:
    - mv docs/swagger.json "${CI_COMMIT_SHA}"
    - mv docs/device-management-api-spec.yaml "${CI_COMMIT_SHA}"
  only:
    refs:
      - $CI_DEFAULT_BRANCH
      - main
      - staging


Deploy:
  stage: deploy
  variables:
     ANSIBLE_HOST_KEY_CHECKING: "false"
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client python3-apt -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - pip install ansible ansible-lint jmespath docker
    - ansible-galaxy role install geerlingguy.docker geerlingguy.pip
  image: python:3
  script:
    - ansible --version
    - DMS_VERSION=$(cat main.go | grep @version | awk {'print $3'})
    - ansible-playbook -i $ANSIBLE_INVENTORY -e dms_version=$DMS_VERSION maint-scripts/deploy/playbook.yaml
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging"
