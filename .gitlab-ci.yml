stages:
  - static_analysis
  - unit_tests
  - security_tests_1
  - functional_tests
  - security_tests_2
  - build
  - deploy_dev
  - user_acceptance_tests
  - deploy_staging
  - regression_tests
  - load_tests
  - security_tests_3
  - deploy_prod

include:
  - project: nunet/nunet-infra
    file: ci/templates/Auto-DevOps.gitlab-ci.yml
    ref: "103-create-ci-cd-stage-unit-testing"

# image: sntshk/ubuntu:nunet

# unit-test-job:
#   stage: unit_tests
#   image: golang:1.18
#   script:
#     - echo "Running unit tests..."
#     - mkdir htmlcov
#     - go install
#     - go install gotest.tools/gotestsum
#     - gotestsum --junitfile report.xml --format testname -- -coverprofile=coverage.txt -covermode count ./...
#     - go get github.com/boumenot/gocover-cobertura
#     - go run github.com/boumenot/gocover-cobertura < coverage.txt > coverage.xml
#     - go tool cover -html=coverage.txt -o htmlcov/index.html
#   coverage: /\d+.\d+% of statements/
#   artifacts:
#     untracked: false
#     expire_in: 30 days
#     when: always
#     reports:
#       junit: report.xml
#       coverage_report:
#         coverage_format: cobertura
#         path: coverage.xml

# pages:
#   script:
#     - mv htmlcov/ public/
#   dependencies:
#     - unit-test-job
#   artifacts:
#     untracked: false
#     expire_in: "30 days"
#     paths:
#       - public
# unit-test-job:
#   stage: unit_tests
#   script:
#     - echo "Running unit tests..."
#     - go test -cover ./...

# lint-test-job:
#   stage: unit_tests
#   script:
#     - echo "Linting go code..."
#     - go vet ./...

build-job:
  stage: build
  script:
    - echo "Building debian archives..."
    - bash maint-scripts/build.sh
