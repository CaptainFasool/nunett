// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: nunet_adapter.proto

package adapter

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// NunetAdapterClient is the client API for NunetAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NunetAdapterClient interface {
	GetPeerList(ctx context.Context, in *GetPeerParams, opts ...grpc.CallOption) (*Peers, error)
	GetDhtContent(ctx context.Context, in *GetDhtParams, opts ...grpc.CallOption) (*DhtContents, error)
	SendMessage(ctx context.Context, in *MessageParams, opts ...grpc.CallOption) (*MessageResponse, error)
	ReceivedMessage(ctx context.Context, in *ReceivedMessageParams, opts ...grpc.CallOption) (*MessageResponse, error)
	GetSelfPeer(ctx context.Context, in *GetPeerParams, opts ...grpc.CallOption) (*Peers, error)
}

type nunetAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewNunetAdapterClient(cc grpc.ClientConnInterface) NunetAdapterClient {
	return &nunetAdapterClient{cc}
}

func (c *nunetAdapterClient) GetPeerList(ctx context.Context, in *GetPeerParams, opts ...grpc.CallOption) (*Peers, error) {
	out := new(Peers)
	err := c.cc.Invoke(ctx, "/NunetAdapter/getPeerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nunetAdapterClient) GetDhtContent(ctx context.Context, in *GetDhtParams, opts ...grpc.CallOption) (*DhtContents, error) {
	out := new(DhtContents)
	err := c.cc.Invoke(ctx, "/NunetAdapter/getDhtContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nunetAdapterClient) SendMessage(ctx context.Context, in *MessageParams, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/NunetAdapter/sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nunetAdapterClient) ReceivedMessage(ctx context.Context, in *ReceivedMessageParams, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/NunetAdapter/receivedMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nunetAdapterClient) GetSelfPeer(ctx context.Context, in *GetPeerParams, opts ...grpc.CallOption) (*Peers, error) {
	out := new(Peers)
	err := c.cc.Invoke(ctx, "/NunetAdapter/getSelfPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NunetAdapterServer is the server API for NunetAdapter service.
// All implementations must embed UnimplementedNunetAdapterServer
// for forward compatibility
type NunetAdapterServer interface {
	GetPeerList(context.Context, *GetPeerParams) (*Peers, error)
	GetDhtContent(context.Context, *GetDhtParams) (*DhtContents, error)
	SendMessage(context.Context, *MessageParams) (*MessageResponse, error)
	ReceivedMessage(context.Context, *ReceivedMessageParams) (*MessageResponse, error)
	GetSelfPeer(context.Context, *GetPeerParams) (*Peers, error)
	mustEmbedUnimplementedNunetAdapterServer()
}

// UnimplementedNunetAdapterServer must be embedded to have forward compatible implementations.
type UnimplementedNunetAdapterServer struct {
}

func (UnimplementedNunetAdapterServer) GetPeerList(context.Context, *GetPeerParams) (*Peers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeerList not implemented")
}
func (UnimplementedNunetAdapterServer) GetDhtContent(context.Context, *GetDhtParams) (*DhtContents, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDhtContent not implemented")
}
func (UnimplementedNunetAdapterServer) SendMessage(context.Context, *MessageParams) (*MessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (UnimplementedNunetAdapterServer) ReceivedMessage(context.Context, *ReceivedMessageParams) (*MessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceivedMessage not implemented")
}
func (UnimplementedNunetAdapterServer) GetSelfPeer(context.Context, *GetPeerParams) (*Peers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfPeer not implemented")
}
func (UnimplementedNunetAdapterServer) mustEmbedUnimplementedNunetAdapterServer() {}

// UnsafeNunetAdapterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NunetAdapterServer will
// result in compilation errors.
type UnsafeNunetAdapterServer interface {
	mustEmbedUnimplementedNunetAdapterServer()
}

func RegisterNunetAdapterServer(s grpc.ServiceRegistrar, srv NunetAdapterServer) {
	s.RegisterService(&NunetAdapter_ServiceDesc, srv)
}

func _NunetAdapter_GetPeerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NunetAdapterServer).GetPeerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NunetAdapter/getPeerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NunetAdapterServer).GetPeerList(ctx, req.(*GetPeerParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _NunetAdapter_GetDhtContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDhtParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NunetAdapterServer).GetDhtContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NunetAdapter/getDhtContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NunetAdapterServer).GetDhtContent(ctx, req.(*GetDhtParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _NunetAdapter_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NunetAdapterServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NunetAdapter/sendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NunetAdapterServer).SendMessage(ctx, req.(*MessageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _NunetAdapter_ReceivedMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedMessageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NunetAdapterServer).ReceivedMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NunetAdapter/receivedMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NunetAdapterServer).ReceivedMessage(ctx, req.(*ReceivedMessageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _NunetAdapter_GetSelfPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NunetAdapterServer).GetSelfPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NunetAdapter/getSelfPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NunetAdapterServer).GetSelfPeer(ctx, req.(*GetPeerParams))
	}
	return interceptor(ctx, in, info, handler)
}

// NunetAdapter_ServiceDesc is the grpc.ServiceDesc for NunetAdapter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NunetAdapter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "NunetAdapter",
	HandlerType: (*NunetAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getPeerList",
			Handler:    _NunetAdapter_GetPeerList_Handler,
		},
		{
			MethodName: "getDhtContent",
			Handler:    _NunetAdapter_GetDhtContent_Handler,
		},
		{
			MethodName: "sendMessage",
			Handler:    _NunetAdapter_SendMessage_Handler,
		},
		{
			MethodName: "receivedMessage",
			Handler:    _NunetAdapter_ReceivedMessage_Handler,
		},
		{
			MethodName: "getSelfPeer",
			Handler:    _NunetAdapter_GetSelfPeer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nunet_adapter.proto",
}
