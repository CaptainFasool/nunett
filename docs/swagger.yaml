basePath: /api/v1
definitions:
  models.BlockchainAddressPrivKey:
    properties:
      address:
        type: string
      mnemonic:
        type: string
      private_key:
        type: string
    type: object
  models.Metadata:
    properties:
      available:
        properties:
          ram:
            type: integer
          update_timestamp:
            type: integer
        type: object
      name:
        type: string
      network:
        type: string
      public_key:
        type: string
      reserved:
        properties:
          cpu:
            type: integer
          memory:
            type: integer
        type: object
      resource:
        properties:
          cpu_max:
            type: number
          cpu_usage:
            type: number
          ram_max:
            type: integer
          total_core:
            type: integer
          update_timestamp:
            type: integer
        type: object
    type: object
  models.Provisioned:
    properties:
      cpu:
        type: number
      memory:
        type: integer
      total_cores:
        type: integer
    type: object
host: localhost:9999
info:
  contact:
    email: support@nunet.io
    name: Support
    url: https://devexchange.nunet.io/
  description: A dashboard application for computing providers.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://nunet.io/tos
  title: Device Management Service
  version: 0.4.45
paths:
  /onboarding/address/new:
    get:
      description: Create a payment address from public key. Return payment address
        and private key.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BlockchainAddressPrivKey'
      summary: Create a new payment address.
      tags:
      - onboarding
  /onboarding/metadata:
    get:
      description: Responds with metadata of current provideer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Metadata'
            type: array
      summary: Get current device info.
      tags:
      - onboarding
  /onboarding/onboard:
    post:
      description: Onboard runs onboarding script given the amount of resources to
        onboard.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Metadata'
            type: array
      summary: Runs the onboarding process.
      tags:
      - onboarding
  /onboarding/provisioned:
    get:
      description: Get total memory capacity in MB and CPU capacity in MHz.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Provisioned'
      summary: Returns provisioned capacity on host.
      tags:
      - onboarding
  /peers:
    get:
      description: Gets a list of peers the libp2p node can see within the network
        and return a list of peers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Return list of peers currently connected to
      tags:
      - p2p
  /peers/chat:
    get:
      description: Get a list of chat requests from peers
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: List chat requests
      tags:
      - chat
  /peers/chat/clear:
    get:
      description: Clear chat request streams from peers
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Clear chat requests
      tags:
      - chat
  /peers/chat/join:
    get:
      description: Join a chat session started by a peer
      responses:
        "200":
          description: OK
      summary: Join chat with a peer
      tags:
      - chat
  /peers/chat/start:
    get:
      description: Start chat session with a peer
      responses:
        "200":
          description: OK
      summary: Start chat with a peer
      tags:
      - chat
  /peers/self:
    get:
      description: Gets self peer info of libp2p node
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Return self peer info
      tags:
      - p2p
  /peers/ws:
    get:
      description: Sends a command to specific node and prints back response.
      responses:
        "200":
          description: OK
      summary: Sends a command to specific node and prints back response.
      tags:
      - peers
  /run/deploy:
    get:
      description: Loads deployment request from the DB after a successful blockchain
        transaction has been made and passes it to compute provider.
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Websocket endpoint responsible for sending deployment request and receiving
        deployment response.
  /run/request-reward:
    post:
      description: HandleRequestReward takes request from the compute provider, talks
        with Oracle and releases tokens if conditions are met.
      responses: {}
      summary: Get NTX tokens for work done.
  /run/request-service:
    post:
      description: HandleRequestService searches the DHT for non-busy, available devices
        with appropriate metadata. Then informs parameters related to blockchain to
        request to run a service on NuNet.
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Informs parameters related to blockchain to request to run a service
        on NuNet
  /run/send-status:
    post:
      description: HandleSendStatus is used by webapps to send status of blockchain
        activities. Such as if tokens have been put in escrow account and account
        creation.
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Sends blockchain status of contract creation.
  /telemetry/free:
    get:
      description: Checks and returns the amount of free resources available
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Returns the amount of free resources available
      tags:
      - telemetry
  /vm/start-custom:
    post:
      description: This endpoint is an abstraction of all primitive endpoints. When
        invokend, it calls all primitive endpoints in a sequence.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Start a VM with custom configuration.
      tags:
      - vm
  /vm/start-default:
    post:
      description: Everything except kernel files and filesystem file will be set
        by DMS itself.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Start a VM with default configuration.
      tags:
      - vm
swagger: "2.0"
