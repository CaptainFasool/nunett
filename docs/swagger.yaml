basePath: /api/v1
definitions:
  models.AddressPrivKey:
    properties:
      address:
        type: string
      private_key:
        type: string
    type: object
  models.Metadata:
    properties:
      available:
        properties:
          ram:
            type: integer
          update_timestamp:
            type: integer
        type: object
      name:
        type: string
      network:
        type: string
      public_key:
        type: string
      reserved:
        properties:
          cpu:
            type: integer
          memory:
            type: integer
        type: object
      resource:
        properties:
          cpu_max:
            type: number
          cpu_usage:
            type: number
          ram_max:
            type: integer
          total_core:
            type: integer
          update_timestamp:
            type: integer
        type: object
    type: object
  models.Provisioned:
    properties:
      cpu:
        type: number
      memory:
        type: integer
      total_cores:
        type: integer
    type: object
host: localhost:9999
info:
  contact:
    email: support@nunet.io
    name: Support
    url: https://devexchange.nunet.io/
  description: A dashboard application for computing providers.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://nunet.io/tos
  title: Device Management Service
  version: "0.2"
paths:
  /address/new:
    get:
      description: Create a payment address from public key. Return payment address
        and private key.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AddressPrivKey'
      summary: Create a new payment address.
      tags:
      - onboarding
  /boot-source/:vmID:
    put:
      description: Configure kernel for the VM.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Configures kernel for the VM.
      tags:
      - vm
  /drives/:vmID:
    put:
      description: Configures filesystem for the VM.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Configures filesystem for the VM.
      tags:
      - vm
  /init/:vmID:
    post:
      description: Starts the firecracker server for the specific VM. Further configuration
        are required.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Starts the VM booting process.
      tags:
      - vm
  /machine-config/:vmID:
    put:
      description: Configures system spec for the VM like CPU and Memory.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Configures system spec for the VM.
      tags:
      - vm
  /metadata:
    get:
      description: Responds with metadata of current provideer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Metadata'
            type: array
      summary: Get current device info.
      tags:
      - onboarding
  /network-interface/:vmID:
    put:
      description: Configures network interface on the host.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Configures network interface on the host.
      tags:
      - vm
  /onboard:
    post:
      description: Onboard runs onboarding script given the amount of resources to
        onboard.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Metadata'
            type: array
      summary: Runs the onboarding process.
      tags:
      - onboarding
  /provisioned:
    get:
      description: Get total memory capacity in MB and CPU capacity in MHz.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Provisioned'
      summary: Returns provisioned capacity on host.
      tags:
      - onboarding
  /start-custom:
    post:
      description: This endpoint is an abstraction of all primitive endpoints. When
        invokend, it calls all primitive endpoints in a sequence.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Start a VM with custom configuration.
      tags:
      - vm
  /start-default:
    post:
      description: This endpoint is an abstraction of all other endpoints. When invokend,
        it calls all other endpoints in a sequence.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Start a VM with default configuration.
      tags:
      - vm
  /start/:vmID:
    post:
      description: Start the VM.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Start the VM.
      tags:
      - vm
  /stop/:vmID:
    post:
      description: Stop the VM.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Stop the VM.
      tags:
      - vm
swagger: "2.0"
