- hosts: dms_test_hz_machines
  become: true
  name: Deploy DMS to machine

  vars:
    pip_install_packages:
      - name: docker

    nunet_dms_wallet_address_path: /etc/nunet/wallet.addr
    nunet_dms_metadata_path: /etc/nunet/metadataV2.json
    nunet_dms_mem_threshold: 10000

  pre_tasks:

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

  roles:
    - role: geerlingguy.pip

  tasks:
    - name: Install dependencies
      ansible.builtin.package:
        name:
          - bc
        state: present

    - name: Copy deb package to machine
      ansible.builtin.copy:
        src: "../../dist/nunet-dms_{{ dms_version }}_{{ (ansible_architecture == 'x86_64') | ternary('amd64', ansible_architecture) }}.deb"
        dest: /tmp/nunet-dms.deb
        mode: "0755"

    - name: Install package
      ansible.builtin.apt:
        deb: /tmp/nunet-dms.deb
      when: ansible_os_family == "Debian"

    # - name: Delete package if already exists
    #   ansible.builtin.apt:
    #     name:
    #       - nunet-dms
    #     state: absent

    # - name: Install package
    #   ansible.builtin.apt:
    #     deb: "{{ nunet_dms_download_url }}"
    #   when: ansible_os_family == "Debian"

    - name: Check if wallet address exists
      ansible.builtin.stat:
        path: "{{ nunet_dms_wallet_address_path }}"
      register: nunet_wallet_file

    - name: Check if machine is onboarded
      ansible.builtin.stat:
        path: "{{ nunet_dms_metadata_path }}"
      register: nunet_metadata_file

    - name: Create wallet address if not exists
      ansible.builtin.shell:
        cmd: nunet wallet new -c > "{{ nunet_dms_wallet_address_path }}"
      register: nunet_wallet
      when: not nunet_wallet_file.stat.exists

    - name: Get data of wallet address
      ansible.builtin.slurp:
        src: "{{ nunet_dms_wallet_address_path }}"
      register: nunet_wallet_result

    - name: Set wallet data as fact
      ansible.builtin.set_fact:
        nunet_wallet: "{{ nunet_wallet_result.content | b64decode | from_json }}"

    - name: Check machine resources
      ansible.builtin.command:
        cmd: nunet available
      register: nunet_available_result

    - name: Save the result as a fact
      ansible.builtin.set_fact:
        device_resources: "{{ nunet_available_result.stdout | from_json }}"

    - name: Onboard machine
      when: not nunet_metadata_file.stat.exists
      block:
        - name: Onboard machine as a compute provider
          when: (device_resources.memory / 2 | round) > nunet_dms_mem_threshold
          ansible.builtin.expect:
            command: 'nunet onboard -m {{ (device_resources.memory / 2 | round) | int }} -c {{ (device_resources.cpu / 2 | round) | int }} -n {{ nunet_dms_nunet_channel }} -a {{ nunet_wallet.address }} -C'
            responses:
              Are you sure you want to join(?i): 'yes'
            echo: true

        - name: Onboard machine as a service provider
          when: (device_resources.memory / 2 | round) < nunet_dms_mem_threshold
          ansible.builtin.expect:
            command: 'nunet onboard -m {{ (device_resources.memory/2 | round) | int }} -c {{ (device_resources.cpu/2 | round) | int }} -n {{ nunet_dms_nunet_channel }} -a {{ nunet_wallet.address }}'
            responses:
              Are you sure you want to join(?i): 'yes'
            echo: true

    - name: Check that machine is onboarded
      ansible.builtin.wait_for:
        port: 9999

    - name: Ensure that nunet-dms is started
      ansible.builtin.systemd:
        name: nunet-dms
        state: started